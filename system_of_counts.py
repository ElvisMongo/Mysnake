import Hex # - импортируем модуль, содержащий в себе функцию symbols
from Hex import symbols


def delenie(x, n):
	S = ''
	lst = []
	if n != 16:
		if x < n: # - если введённое число меньше, чем основание n, то в список помещаем строковый формат введённого аргумента
			lst = str(x)
			return lst
		
		else:
			while x >= n: 
				k = x % n
				x //= n
				lst.insert(0,k)
				continue
		
			if x < n:
				lst.insert(0,x)
			
		S = ''.join([str(i) for i in lst]) # - число в системе исчисления n, представленное как список, конвертируется в строку  
	else:
		if x < n:
			symbols(x) # - если введённое число меньше, чем основание шестнадцатеричной системы, то оно присваивает себе соответствующий символ A, B, C, D, E или F
		else:
			while x >= n: # - если введённое число больше, чем основание шестнадцатеричной системы, то производим деление на 16
				k = x % n
				x //= n
				if k >= 10: # - если остаток от деления больше, либо равен 10, то он присваивает себе один из символов A, B, C, D, E или F, затем записывается в начало списка
					lst.insert(0,symbols(k))
				else:
					lst.insert(0, k) # - если остаток меньше 10, то он просто записывается в начало списка
					
					if x < n: # - Процесс деления аргумента проиходит до тех пор, пока частное не будет меньше основания системы исчисления. Если частное меньше основания, то мы записываем его в начало списка.
						lst.insert(0,x)
				continue
				
		S = ''.join([str(i) for i in lst])	
					
	return S



